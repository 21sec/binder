#include "tos_pvr.h"

fpi_error{int} tos_pvr_is_record_file_exist(char{in}{len:strlen(path)} *path,fpi_bool{int}{out}{len:1} *isExist);
fpi_error{int} tos_pvr_scan_directory(char{in}{len:strlen(usbDiskPath)} *usbDiskPath);
fpi_error{int} tos_pvr_scan_resource_release(void);
fpi_error{int} tos_pvr_get_recording_list_count(int32_t{int}{out}{len:1} *value);
fpi_error{int} tos_pvr_get_recording_list(int32_t{int} startIndex,tos_pvr_recording_file_info_t{out}{len:1024} *list,uint32_t{int}{inout}{len:1} *count);
fpi_error{int} tos_pvr_set_file_sort_order(EN_TOS_PVR_FILE_SORT_TYPE{int} type);
fpi_error{int} tos_pvr_get_file_sort_order(EN_TOS_PVR_FILE_SORT_TYPE{int}{out}{len:1} *type);
fpi_error{int} tos_pvr_get_recording_info(char{in}{len:strlen(url)} *url, tos_pvr_recording_info_t{out}{len:1} *value);
fpi_error{int} tos_pvr_delete_recording(char{in}{len:strlen(url)} *url);
fpi_error{int} tos_pvr_record_start(uint32_t{int} channelId);
fpi_error{int} tos_pvr_record_pause(void);
fpi_error{int} tos_pvr_record_resume(void);
fpi_error{int} tos_pvr_record_stop(void);
fpi_error{int} tos_pvr_get_recording_state(fpi_bool{int}{out}{len:1} *value);
fpi_error{int} tos_pvr_get_current_recording_url(char{out}{len:1024} *url);
fpi_error{int} tos_pvr_record_file_start_play(char{in}{len:strlen(url)} * url);
fpi_error{int} tos_pvr_record_file_stop_play(void);
fpi_error{int} tos_pvr_play_set_motion(EN_TOS_PVR_MOTION{int} motion);
fpi_error{int} tos_pvr_play_get_current_motion(EN_TOS_PVR_MOTION{int}{out}{len:1} *motion);
fpi_error{int} tos_pvr_play_seek(int32_t{int} seek);
fpi_error{int} tos_pvr_play_get_current_play_time(int32_t{int}{out}{len:1} *value);
fpi_error{int} tos_pvr_play_get_file_url(char{out}{len:1024} *url);
fpi_error{int} tos_pvr_play_get_audio_track_info(tos_pvr_audio_stream_info_t{out}{len:1024} *list, int32_t{int}{inout}{len:1} *count);
fpi_error{int} tos_pvr_play_get_audio_track_count(int32_t{int}{out}{len:1} *count);
fpi_error{int} tos_pvr_play_get_current_audio_track(int32_t{int}{out}{len:1} *id);
fpi_error{int} tos_pvr_play_set_audio_track(int32_t{int} id);
fpi_error{int} tos_pvr_play_enable_subtitle(fpi_bool{int} bEnable);
fpi_error{int} tos_pvr_play_get_subtitle_info(tos_pvr_subtitle_stream_info_t{out}{len:1024} *list, int32_t{int}{inout}{len:1} *count);
fpi_error{int} tos_pvr_play_get_subtitle_count(int32_t{int}{out}{len:1} *count);
fpi_error{int} tos_pvr_play_get_current_subtitle(int32_t{int}{out}{len:1} *id);
fpi_error{int} tos_pvr_play_set_subtitle(int32_t{int} id);
fpi_error{int} tos_pvr_timeshift_start(void);
fpi_error{int} tos_pvr_timeshift_stop(void);
fpi_error{int} tos_pvr_timeshift_get_start_time(uint32_t{int}{out}{len:1}* u32TimeInSeconds);
fpi_error{int} tos_pvr_timeshift_is_file_exist(fpi_bool{int}{out}{len:1} *value);
fpi_error{int} tos_pvr_timeshift_init_file(uint32_t{int} u32SizeInMB);
fpi_error{int} tos_pvr_get_timeshift_file_init_progress(uint8_t{int}{out}{len:1}* u8Percent);
fpi_error{int} tos_pvr_timeshift_write_speed_test(EN_TOS_TIMESHIFT_WRITE_SPEED_TEST{int} test,uint8_t{int}{out}{len:1}* u8Percent);
fpi_error{int} tos_pvr_get_timeshift_speed(uint32_t{int}{out}{len:1}* u32SpeedInKBps);
fpi_error{int} tos_pvr_get_free_space_status(EN_TOS_PVR_TYPE{int} type,fpi_bool{int}{out}{len:1} *value);
fpi_error{int} tos_pvr_get_disk_free_space(uint32_t{int}{out}{len:1}* u32SizeInMB);
fpi_error{int} tos_pvr_get_disk_info(char{out}{len:1024}* pstrDevName,char{out}{len:1024}* pstrDiskName);
fpi_error{int} tos_pvr_select_disk(char{in}{len:strlen(pstrDevName)}* pstrDevName,char{in}{len:strlen(pstrDiskName)}* pstrDiskName);
fpi_error{int} tos_pvr_disk_format(char{in}{len:strlen(pstrDevDiskName)} *pstrDevDiskName,char{in}{len:strlen(strMountPath)} *strMountPath);
fpi_error{int} tos_pvr_get_formating_progress(uint8_t{int}{out}{len:1}* u8Percent);
fpi_error{int} tos_pvr_record_file_play_by_mode(EN_TOS_PVR_PLAY{int} play);
fpi_error{int} tos_pvr_play_get_repeat_mode(EN_TOS_PVR_PLAY_REPEAT_MODE{int}{out}{len:1} *value);
fpi_error{int} tos_pvr_play_set_repeat_mode(EN_TOS_PVR_PLAY_REPEAT_MODE{int} repeatmode);
fpi_error{int} tos_pvr_play_get_file_position(int32_t{int}{out}{len:1} *value);
fpi_error{int} tos_pvr_record_ts_start(char{in}{len:strlen(pstrFileName)}* pstrFileName);
fpi_error{int} tos_pvr_record_ts_stop(void);
fpi_error{int} tos_pvr_timeshift_start_v2(tos_pvr_timeshift_start_params_t{in}{len:1024} *pstStartParams);